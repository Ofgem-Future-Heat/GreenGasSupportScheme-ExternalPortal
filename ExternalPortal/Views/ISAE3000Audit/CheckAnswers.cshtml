@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents

@model ExternalPortal.ViewModels.Tasks.Isae3000AuditModel
@{
    ViewData["Title"] = "ISAE3000 Audit check answers";

    await Html.RenderPartialAsync("Components/ViewBackLink");

    var applicationId = Context.Request.Query["ApplicationId"];
}

@using (Html.BeginForm("SubmitYourAnswers", "ISAE3000Audit", new { ApplicationId = applicationId }, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">

            <h1 class="govuk-heading-l">Check your answers</h1>

            <dl class="govuk-summary-list govuk-!-margin-bottom-9">
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        ISAE 3000 audit document
                    </dt>
                    <dd class="govuk-summary-list__value">
                        <a href="@UrlKeys.DocumentDownload/@Model.DocumentId?ApplicationId=@applicationId">
                            @Model.Filename
                        </a>, (@Model.FileSizeAsString)
                    </dd>
                    <dd class="govuk-summary-list__actions">
                        <a class="govuk-link" href="@UrlKeys.Isae3000Upload?ApplicationId=@applicationId">
                            Change<span class="govuk-visually-hidden"> document</span>
                        </a>
                    </dd>
                </div>
            </dl>
        </div>
    </div>

    <div class="govuk-button-group">
        @await Html.GovUkButton(new ButtonViewModel { Text = "Save and continue" })
    </div>
}

@{
    await Html.RenderPartialAsync("Components/ViewReturnToApplicationLink", applicationId);
}
