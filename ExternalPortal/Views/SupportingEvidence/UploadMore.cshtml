@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents

@model ExternalPortal.ViewModels.Tasks.AdditionalFinancialEvidenceModel
@{
    ViewData["Title"] = "Additional evidence";

    var formError = Model.HasError() ? "govuk-form-group--error" : "";

    await Html.RenderPartialAsync("Components/ViewBackLink");

    var applicationId = Context.Request.Query["ApplicationId"];
}


@using (Html.BeginForm("UploadMore", "SupportingEvidence", new { ApplicationId = @applicationId }, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h1 class="govuk-heading">@Model.GetUploadedHeading()</h1>

            @foreach (var doc in Model.Documents)
            {
                <dl class="govuk-summary-list govuk-!-margin-bottom-9">
                    <dd class="govuk-summary-list__value">
                        <strong>@doc.Reference</strong>
                    </dd>
                    <dd class="govuk-summary-list__value">
                        <a class="govuk-link" download href="@UrlKeys.DocumentDownload/@doc.DocumentId?ApplicationId=@applicationId">
                            @doc.Filename
                        </a>, (@doc.FileSizeAsString)
                    </dd>
                    <dd class="govuk-summary-list__actions">
                        <a class="govuk-link" href="@UrlKeys.SupportingEvidenceDelete/@doc.DocumentId?ApplicationId=@applicationId">
                            Delete<span class="govuk-visually-hidden">  </span>
                        </a>
                    </dd>
                </dl>
            }

            <div class="govuk-form-group @formError">
                <fieldset class="govuk-fieldset">
                    @{
                        if (Model.HasError())
                        {
                            <span id="transport-upload-error" class="govuk-error-message">
                                @Model.Error
                            </span>
                        }
                    }

                    <div class="govuk-fieldset__legend govuk-fieldset__legend--m">
                        Do you want to upload another document?
                    </div>

                    <div class="govuk-radios">
                        @{
                            foreach (var option in Model.MoreOptions)
                            {
                                <div class="govuk-radios__item">
                                    <input class="govuk-radios__input" id="@option.Id"
                                           name="option" type="radio" value="@option.Value">
                                    <label class="govuk-label govuk-radios__label" for="@option.Id">
                                        @option.Text
                                    </label>
                                </div>
                            }
                        }
                    </div>
                </fieldset>
            </div>

        </div>
    </div>

    <div class="govuk-button-group">
        @await Html.GovUkButton(new ButtonViewModel { Text = "Save and continue" })
    </div>
}

@{
    await Html.RenderPartialAsync("Components/ViewReturnToApplicationLink", applicationId);
}
