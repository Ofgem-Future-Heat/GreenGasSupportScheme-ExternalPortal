@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents

@model ExternalPortal.ViewModels.Tasks.AdditionalFinancialEvidenceModel
@{
    ViewData["Title"] = "Confirm supporting evidence";

    var formError = Model.HasError() ? "govuk-form-group--error" : "";

    await Html.RenderPartialAsync("Components/ViewBackLink");

    var applicationId = Context.Request.Query["ApplicationId"];

    var uploadedDocument = Model.Documents.Last();
}

@using (Html.BeginForm("UploadConfirm", "SupportingEvidence", new { ApplicationId = @applicationId }, FormMethod.Post, true, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h1 class="govuk-heading">Check your additional supporting evidence document upload</h1>

            @{
                await Html.RenderPartialAsync("Components/UploadFileDetails",
                    new ViewDataDictionary(ViewData)
                    {
                        { "Id", uploadedDocument.DocumentId },
                        { "Name", uploadedDocument.Filename },
                        { "Size", uploadedDocument.FileSizeAsString },
});
            }

            <div class="govuk-form-group @formError">
                <fieldset class="govuk-fieldset">
                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                        Is this file correct?
                    </legend>

                    @{
                        if (Model.HasError())
                        {
                            <span id="transport-upload-error" class="govuk-error-message">
                                @Model.Error
                            </span>
                        }
                    }

                    <div class="govuk-radios">
                        @{
                            foreach (var option in Model.Options)
                            {
                                <div class="govuk-radios__item">
                                    <input class="govuk-radios__input" id="@option.Id"
                                           name="option" type="radio" value="@option.Value">
                                    <label class="govuk-label govuk-radios__label" for="@option.Id">
                                        @option.Text
                                    </label>
                                </div>
                            }
                        }
                    </div>

                </fieldset>
            </div>

        </div>
    </div>

    <div class="govuk-button-group">
        @await Html.GovUkButton(new ButtonViewModel { Text = "Save and continue" })
    </div>

    @Html.Hidden("DocumentId", uploadedDocument.DocumentId, new { @id = "DocumentId" })
}

@{
    await Html.RenderPartialAsync("Components/ViewReturnToApplicationLink", applicationId);
}
