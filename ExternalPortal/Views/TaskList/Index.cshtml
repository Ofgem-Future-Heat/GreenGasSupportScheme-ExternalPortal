@model ExternalPortal.ViewModels.TaskListViewModel

@{
    ViewData["Title"] = "Green Gas Support Scheme application";

    <a class="govuk-back-link" href="/dashboard">Back to your dashboard</a>
}

@Html.AntiForgeryToken()

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-xl">Green Gas Support Scheme application</h1>

        @{
            if (Model.SectionsCompleted() >= 1 && Model.SectionsCompleted() != Model.TotalSections())
            {
                <h2 class="govuk-heading-s govuk-!-margin-bottom-2">Application incomplete</h2>
            }
        }

        <ol class="app-task-list">
            <li>
                <h2 class="app-task-list__section">
                    <span class="app-task-list__section-number">1. </span> Tell us your plans for producing biomethane
                </h2>

                <ul class="app-task-list__items">

                    @{ await Html.RenderPartialAsync("_TaskListItems", new {Tasks = Model.StageOneTasks(), AppId = Model.ApplicationId, PreviousStageIsApproved = true}); }

                    @if (Model.StageOneInProgress)
                    {
                        <li>
                            <br />
                            @if (Model.StageOneCanSubmit)
                            {
                                <p class="govuk-body">@Model.GetSubmitText()</p>
                                <form class="" action="/task-list/save-stage-one" method="post">
                                    <input type="hidden" name="stage-one-completed" value="true">
                                    <button class="govuk-button" data-module="govuk-button">
                                        Accept and submit
                                    </button>
                                </form>
                            }
                            else
                            {
                                <p class="govuk-body">@Model.GetSubmitText()</p>
                                <button disabled="disabled" aria-disabled="true" class="govuk-button govuk-button--disabled" data-module="govuk-button">
                                    Accept and submit
                                </button>
                            }
                        </li>
                    }
                </ul>
            </li>
            <li>
                <h2 class="app-task-list__section">
                    <span class="app-task-list__section-number">2. </span> Give us evidence of your project finances
                </h2>

                <ul class="app-task-list__items">
                    @{ await Html.RenderPartialAsync("_TaskListItems", new {Tasks = Model.StageTwoTasks(), AppId = Model.ApplicationId, PreviousStageIsApproved = Model.StageTwoEditable}); }

                    @if (Model.StageTwoInProgress)
                    {
                        <li>
                            <br/>
                            @if (Model.StageTwoCanSubmit)
                                {
                                    <p class="govuk-body">@Model.GetSubmitText()</p>
                                    <form class="" action="/task-list/save-stage-two" method="post">
                                        <input type="hidden" name="stage-two-completed" value="true">
                                        <button class="govuk-button" data-module="govuk-button">
                                            Accept and submit
                                        </button>
                                    </form>
                                }
                                else
                                {
                                    <p class="govuk-body">@Model.GetSubmitText()</p>
                                    <button disabled="disabled" aria-disabled="true" class="govuk-button govuk-button--disabled" data-module="govuk-button">
                                        Accept and submit
                                    </button>
                                }
                        </li>
                    }
                </ul>
            </li>

            <li>
                <h2 class="app-task-list__section">
                    <span class="app-task-list__section-number">3. </span> Give us your commissioning and production evidence
                </h2>
                <ul class="app-task-list__items">
                    @{ await Html.RenderPartialAsync("_TaskListItems", new {Tasks = Model.StageThreeTasks(), AppId = Model.ApplicationId, PreviousStageIsApproved = false}); }
                </ul>
            </li>
        </ol>
    </div>
</div>
