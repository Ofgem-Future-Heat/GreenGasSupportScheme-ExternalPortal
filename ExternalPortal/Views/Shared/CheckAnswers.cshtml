@using GovUkDesignSystem
@using GovUkDesignSystem.GovUkDesignSystemComponents

@model ExternalPortal.ViewModels.CheckAnswersViewModel
@{
    ViewData["Title"] = $"{Model.TaskType.GetDisplayName()} - Check Answers";
    await Html.RenderPartialAsync("Components/ViewBackLink");
}
@using (Html.BeginForm("CheckAnswers", Model.TaskType.ToString(), FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds-from-desktop">

            <h1 class="govuk-heading-l">Check your answers</h1>

            <h2 class="govuk-heading-m">@Model.TaskType.GetDisplayName()</h2>

            <dl class="govuk-summary-list govuk-!-margin-bottom-9">

                @foreach (Answer a in Model.Answers)
                {
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            @a.PropertyName.ToString().SplitCamelCase()
                        </dt>

                        <dd class="govuk-summary-list__value">
                            @a.PropertyValue
                        </dd>
                        <dd class="govuk-summary-list__actions">
                            <a class="govuk-link" href=@a.ChangeLink>
                                Change<span class="govuk-visually-hidden"> @a.PropertyName.ToString().SplitCamelCase()</span>
                            </a>
                        </dd>
                    </div>
                }

            </dl>

            <p>
                <div class="govuk-button-group">
                    @await Html.GovUkButton(new ButtonViewModel { Text = "Save and continue" })
                </div>
            </p>
        </div>
    </div>
}